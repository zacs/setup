---
- name: install CLI tools (OSX)
  homebrew:
    name: ['git', 's3cmd', 'wget', 'hub', 'python', 'ruby', 'node', 'archey', 'brew-gem', 'brew-pip', 'hub', 'watchman', 'ffmpeg', 'youtube-dl', 'zsh']
    state: present
    update_homebrew: yes
  when: ansible_os_family == 'Darwin'

- name: update apt
  apt: update_cache=yes
  when: ansible_distribution == 'Ubuntu'
  become: yes
  become_method: sudo

- name: install CLI tools (Ubuntu)
  apt: name={{ item }} state=present
  with_items: "{{ cli-tools }}"
  when: ansible_distribution == 'Ubuntu'
  become: yes
  become_method: sudo

- name: install gem tools
  gem: name={{ item }} state=present
  with_items: "{{ gem-tools }}"
  when: ansible_os_family == 'Darwin'

- name: install apps that need to skip CI
  homebrew_cask: name={{ item }} state=present
  with_items: "{{ apps }}"
  when: ansible_os_family == 'Darwin' and ansible_env.CI is not defined

- name: install binary casks
  homebrew_cask: name={{ item }} state=present
  with_items: "{{ binary-casks }}"
  when: ansible_os_family == 'Darwin'

- name: create ios emulator app link
  command: ln -s /Applications/Xcode.app/Contents/Developer/Applications/Simulator.app /Applications/iOS\ Simulator.app
  when: ansible_os_family == 'Darwin'

- name: install fonts
  homebrew_cask: name={{ item }} state=present
  with_items: "{{ fonts }}"
  when: ansible_os_family == 'Darwin'

- name: apply OS X for hackers settings
  script: osx
  when: ansible_os_family == 'Darwin'

- name: create dirs
  file: name={{ ansible_env.HOME }}/{{ item }} state=directory
  with_items:
    - 'Code'
    - 'Code/scratch'
